put path to correct binaries

channelID=ottospis




~~~ These are done on the virtual machine ~~~~

Generate crypto files:
******************************************************************************************************************************************************
cryptogen generate --config=./crypto-config.yaml
******************************************************************************************************************************************************

Create the genesis block
******************************************************************************************************************************************************
configtxgen -profile MultiPiEtcdRaft -outputBlock ./channel-artifacts/pichannel.block -channelID pichannel
******************************************************************************************************************************************************
------------------------------------------------------------------------------------------------------------------------------------------------------




~~~ Swarm & Overlay setup ~~~

start a swarm
******************************************************************************************************************************************************
docker swarm init --advertise-addr 192.168.86.151/150/74/154
******************************************************************************************************************************************************

join swarm
******************************************************************************************************************************************************
docker swarm join XXXXXXX --advertise-addr 192.168.86.151/150/74/154
******************************************************************************************************************************************************

Create the overlay
******************************************************************************************************************************************************
docker network create --attachable --driver overlay pi-network
******************************************************************************************************************************************************

create a container to 'touch' the network
******************************************************************************************************************************************************
docker run -itd --name mybusybox --network pi-network busybox
******************************************************************************************************************************************************
------------------------------------------------------------------------------------------------------------------------------------------------------



~~~ Start the containers~~~

laptop
******************************************************************************************************************************************************
chmod +x laptopUp.sh laptopdown.sh
./laptopUp.sh
******************************************************************************************************************************************************

pi1
******************************************************************************************************************************************************
chmod +x pi1Up.sh pi1down.sh
./pi1Up.sh
******************************************************************************************************************************************************

pi2
******************************************************************************************************************************************************
chmod +x pi2Up.sh pi2down.sh
./pi2Up.sh
******************************************************************************************************************************************************

pi3
******************************************************************************************************************************************************
chmod +x pi3Up.sh pi3down.sh
./pi3Up.sh
******************************************************************************************************************************************************
------------------------------------------------------------------------------------------------------------------------------------------------------


docker stack deploy --compose-file pi-network.yaml PiStack


~~~ Creating the channel(laptop)  ~~~

******************************************************************************************************************************************************
OSN_TLS_CA_ROOT_CERT with the path and file name of the orderer organization TLS CA root certificate and intermediate certificate if using an intermediate TLS CA.
export ORDERER_CA=${PWD}                   /crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
                                            crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt


export $CAFILE=${PWD}/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt
export $CLIENTCERT=${PWD}



export ORDERER_ADMIN_TLS_SIGN_CERT=${PWD}  /crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
export ORDERER_ADMIN_TLS_PRIVATE_KEY=${PWD}/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key

- ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
- ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
- ORDERER_ADMIN_TLS_ROOTCAS=      [/var/hyperledger/orderer/tls/ca.crt]
- ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]

     crypto-config\ordererOrganizations\example.com\orderers\orderer.example.com\msp
- ../crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
- ../crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls



osnadmin channel join --channel-id mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /home/otto/Desktop/Thesis/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /home/otto/Desktop/Thesis/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /home/otto/Desktop/Thesis/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key

          \ordererOrganizations\example.com\orderers\orderer.example.com\msp\tlscacerts\tlsca.example.com-cert.pem
--ca-file /home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
--client-cert 
--client-key 

export ORDERERCA=/home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
export CLIENTCERT=/home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
export CLIENTKEY=/home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key


osnadmin channel join --channel-id pichannel --config-block ./channel-artifacts/pichannel.block -o 0.0.0.0:7053 --ca-file /home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /home/otto/Desktop/Thesis/HLF-for-RPI-/mynetwork/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key


osnadmin channel join --channel-id pichannel --config-block ./channel-artifacts/pichannel.block -o 0.0.0.0:7053 --ca-file "$CAFILE" --client-cert "$CLIENTCERT" --client-key "$CLIENTKEY"

osnadmin channel join --channel-id pichannel --config-block ./channel-artifacts/pichannel.block -o 0.0.0.0:7053 --ca-file "$ORDERERCA" --client-cert "$CLIENTCERT" --client-key "$CLIENTKEY"
******************************************************************************************************************************************************
------------------------------------------------------------------------------------------------------------------------------------------------------



~~~ Joining the channel ~~~

******************************************************************************************************************************************************
docker exec cli peer channel join -b ./channel-artifacts/ottospis.block
******************************************************************************************************************************************************

******************************************************************************************************************************************************
docker exec -e CORE_PEER_ADDRESS=peer0.org1.example.com:7051 -e CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt cli peer channel join -b ./channel-artifacts/ottospis.block
******************************************************************************************************************************************************


******************************************************************************************************************************************************
docker exec cli peer channel fetch newest ottospis.block -c ottospis --orderer orderer.example.com:7050
******************************************************************************************************************************************************

