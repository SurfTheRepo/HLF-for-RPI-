version: '3'

networks:
  pi-network:
    external: true 

volumes:
  orderer.example.com:
  peer0.org1.example.com:
  peer1.org1.example.com:
  peer2.org1.example.com:
  peer3.org1.example.com:

services:
  orderer:
    # container_name: orderer.example.com
    image: ottoflaherty/fabric-orderer:arm64-2.3
    environment: 
      - FABRIC_LOGGING_SPEC=INFO

      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050

      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS

      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]

      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none

      - ORDERER_CHANNELPARTICIPATION_ENABLED=true

      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - /home/pi/HLF-for-RPI-/channel-artifacts/pichannel.block:/var/hyperledger/orderer/orderer.genesis.block
        - /home/pi/HLF-for-RPI-/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
        - /home/pi/HLF-for-RPI-/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
        - orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
      - 7053:7053
    hostname: orderer.example.com
    networks:
      pi-network:
        aliases:
          - orderer.example.com
    deploy:
      placement:
        constraints:
          - node.hostname == pi3

  # PEER TO GO ON LAPTOP
  peer0:
    # container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:2.3
    environment:
    #   # Peer specific variabes
      
      - CORE_PEER_ID=peer0.org1.example.com
      # Used to name chaincode containers potentially
      - CORE_PEER_NETWORKID=dev
      # OTher peers IN org use this to find this peer
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      #stays 0000 because 
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_ADDRESSAUTODETECT= false
      - CORE_PEER_PROFILE_ENABLED=true
      

      # GOSSIP SHIT
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:8051 peer1.org1.example.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051

      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=pi-network
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      # - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG

      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org1.example.com:9443
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ./organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
        - peer0.org1.example.com:/var/hyperledger/production
        - ./corelaptop:/etc/hyperledger/fabric
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
      - 7052:7052
    hostname: peer0.org1.example.com
    networks:
      pi-network:
        aliases:
          - peer0.org1.example.com
    deploy:
      placement:
        constraints:
          - node.hostname == otto-UX360UAK

  peer1:
    # container_name: peer0.org1.example.com
    image: ottoflaherty/fabric-peer:arm64-2.3
    environment:
    #   # Peer specific variabes
      
      - CORE_PEER_ID=peer1.org1.example.com
      # Used to name chaincode containers potentially
      - CORE_PEER_NETWORKID=dev
      # OTher peers IN org use this to find this peer
      - CORE_PEER_ADDRESS=peer1.org1.example.com:8051
      #stays 0000 because 
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_PROFILE_ENABLED=true
      
    #   - CORE_PEER_LOCALMSPID=Org1MSP

      # GOSSIP SHIT
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051 peer2.org1.example.com:9051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:8051

    #   #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    #   # the following setting starts chaincode containers on the same
    #   # bridge network as the peers
    #   # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=pi-network
      - CORE_VM_DOCKER_ATTACHSTDOUT=true

    #   - FABRIC_LOGGING_SPEC=INFO
    #   #- FABRIC_LOGGING_SPEC=DEBUG

      - CORE_PEER_CHAINCODEADDRESS=peer1.org1.example.com:8052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
      
      - CORE_OPERATIONS_LISTENADDRESS=peer1.org1.example.com:9443

    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - /home/pi/HLF-for-RPI-/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - /home/pi/HLF-for-RPI-/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/fabric/tls
        - peer1.org1.example.com:/var/hyperledger/production
        - /home/pi/HLF-for-RPI-/corepi:/etc/hyperledger/fabric
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 8051:8051
      - 8052:8052
    hostname: peer1.org1.example.com
    networks:
      pi-network:
        aliases:
          - peer1.org1.example.com
    deploy:
      placement:
        constraints:
          - node.hostname == pi1

  peer2:
    # container_name: peer0.org1.example.com
    image: ottoflaherty/fabric-peer:arm64-2.3
    environment:
    #   # Peer specific variabes
      
      - CORE_PEER_ID=peer2.org1.example.com
      # Used to name chaincode containers potentially
      - CORE_PEER_NETWORKID=dev
      # OTher peers IN org use this to find this peer
      - CORE_PEER_ADDRESS=peer2.org1.example.com:9051
      #stays 0000 because 
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_ADDRESSAUTODETECT=false
      - CORE_PEER_PROFILE_ENABLED=true
      
    #   - CORE_PEER_LOCALMSPID=Org1MSP

      # GOSSIP SHIT
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051 peer1.org1.example.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.org1.example.com:9051

    #   #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    #   # the following setting starts chaincode containers on the same
    #   # bridge network as the peers
    #   # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=pi-network
      - CORE_VM_DOCKER_ATTACHSTDOUT=true

      - CORE_PEER_CHAINCODEADDRESS=peer2.org1.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      
      - CORE_OPERATIONS_LISTENADDRESS=peer2.org1.example.com:9443

    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - /home/pi/HLF-for-RPI-/organizations/peerOrganizations/org1.example.com/peers/peer2.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - /home/pi/HLF-for-RPI-/organizations/peerOrganizations/org1.example.com/peers/peer2.org1.example.com/tls:/etc/hyperledger/fabric/tls
        - peer2.org1.example.com:/var/hyperledger/production
        - /home/pi/HLF-for-RPI-/corepi:/etc/hyperledger/fabric
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9051:9051
      - 9052:9052
    hostname: peer2.org1.example.com
    networks:
      pi-network:
        aliases:
          - peer2.org1.example.com
    deploy:
      placement:
        constraints:
          - node.hostname == pi2
